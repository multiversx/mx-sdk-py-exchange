{
    "buildInfo": {
        "rustc": {
            "version": "1.70.0-nightly",
            "commitHash": "22f247c6f3ed388cb702d01c2ff27da658a8b353",
            "commitDate": "2023-03-13",
            "channel": "Nightly",
            "short": "rustc 1.70.0-nightly (22f247c6f 2023-03-13)"
        },
        "contractCrate": {
            "name": "pair",
            "version": "0.0.0",
            "gitVersion": "v1.6.0-1266-g30817f6c"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.39.4"
        }
    },
    "name": "Pair",
    "constructor": {
        "inputs": [
            {
                "name": "first_token_id",
                "type": "TokenIdentifier"
            },
            {
                "name": "second_token_id",
                "type": "TokenIdentifier"
            },
            {
                "name": "router_address",
                "type": "Address"
            },
            {
                "name": "router_owner_address",
                "type": "Address"
            },
            {
                "name": "total_fee_percent",
                "type": "u64"
            },
            {
                "name": "special_fee_percent",
                "type": "u64"
            },
            {
                "name": "initial_liquidity_adder",
                "type": "Address"
            },
            {
                "name": "admins",
                "type": "variadic<Address>",
                "multi_arg": true
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "addInitialLiquidity",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "addLiquidity",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "first_token_amount_min",
                    "type": "BigUint"
                },
                {
                    "name": "second_token_amount_min",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "removeLiquidity",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "first_token_amount_min",
                    "type": "BigUint"
                },
                {
                    "name": "second_token_amount_min",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "removeLiquidityAndBuyBackAndBurnToken",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "token_to_buyback_and_burn",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "swapNoFeeAndForward",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "token_out",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "destination_address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "swapTokensFixedInput",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "token_out",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "amount_out_min",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "swapTokensFixedOutput",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "token_out",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "amount_out",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "setLpTokenIdentifier",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "getTokensForGivenPosition",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "liquidity",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "getReservesAndTotalSupply",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                },
                {
                    "type": "BigUint"
                },
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getAmountOut",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_in",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "amount_in",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getAmountIn",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_wanted",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "amount_wanted",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getEquivalent",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_in",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "amount_in",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getFeeState",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "whitelist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeWhitelist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "addTrustedSwapPair",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "pair_address",
                    "type": "Address"
                },
                {
                    "name": "first_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "second_token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeTrustedSwapPair",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "first_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "second_token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "`fees_collector_cut_percentage` of the special fees are sent to the fees_collector_address SC",
                "",
                "For example, if special fees is 5%, and fees_collector_cut_percentage is 10%,",
                "then of the 5%, 10% are reserved, and only the rest are split between other pair contracts."
            ],
            "name": "setupFeesCollector",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "fees_collector_address",
                    "type": "Address"
                },
                {
                    "name": "fees_collector_cut_percentage",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setFeeOn",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "enabled",
                    "type": "bool"
                },
                {
                    "name": "fee_to_address",
                    "type": "Address"
                },
                {
                    "name": "fee_token",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "getFeeDestinations",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<tuple<Address,TokenIdentifier>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getTrustedSwapPairs",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<tuple<TokenPair,Address>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getWhitelistedManagedAddresses",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getFeesCollectorAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getFeesCollectorCutPercentage",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "setStateActiveNoSwaps",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setFeePercents",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "total_fee_percent",
                    "type": "u64"
                },
                {
                    "name": "special_fee_percent",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "getLpTokenIdentifier",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getTotalFeePercent",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getSpecialFee",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getRouterManagedAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getFirstTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getSecondTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getTotalSupply",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getInitialLiquidtyAdder",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Option<Address>"
                }
            ]
        },
        {
            "name": "getReserve",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "updateAndGetTokensForGivenPositionWithSafePrice",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "liquidity",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                },
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "updateAndGetSafePrice",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "input",
                    "type": "EsdtTokenPayment"
                }
            ],
            "outputs": [
                {
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        {
            "name": "setMaxObservationsPerRecord",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "max_observations_per_record",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setLockingDeadlineEpoch",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_deadline",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setLockingScAddress",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "setUnlockEpoch",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_epoch",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "getLockingScAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getUnlockEpoch",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getLockingDeadlineEpoch",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "addAdmin",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeAdmin",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "updateOwnerOrAdmin",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "previous_owner",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "getPermissions",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "addToPauseWhitelist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address_list",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeFromPauseWhitelist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address_list",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "pause",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "resume",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "getState",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "State"
                }
            ]
        }
    ],
    "events": [
        {
            "identifier": "swap",
            "inputs": [
                {
                    "name": "token_in",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "token_out",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "caller",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "epoch",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "swap_event",
                    "type": "SwapEvent"
                }
            ]
        },
        {
            "identifier": "swap_no_fee_and_forward",
            "inputs": [
                {
                    "name": "token_id_out",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "caller",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "epoch",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "swap_no_fee_and_forward_event",
                    "type": "SwapNoFeeAndForwardEvent"
                }
            ]
        },
        {
            "identifier": "add_liquidity",
            "inputs": [
                {
                    "name": "first_token",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "second_token",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "caller",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "epoch",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "add_liquidity_event",
                    "type": "AddLiquidityEvent"
                }
            ]
        },
        {
            "identifier": "remove_liquidity",
            "inputs": [
                {
                    "name": "first_token",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "second_token",
                    "type": "TokenIdentifier",
                    "indexed": true
                },
                {
                    "name": "caller",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "epoch",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "remove_liquidity_event",
                    "type": "RemoveLiquidityEvent"
                }
            ]
        }
    ],
    "hasCallback": false,
    "types": {
        "AddLiquidityEvent": {
            "type": "struct",
            "fields": [
                {
                    "name": "caller",
                    "type": "Address"
                },
                {
                    "name": "first_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "first_token_amount",
                    "type": "BigUint"
                },
                {
                    "name": "second_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "second_token_amount",
                    "type": "BigUint"
                },
                {
                    "name": "lp_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "lp_token_amount",
                    "type": "BigUint"
                },
                {
                    "name": "lp_supply",
                    "type": "BigUint"
                },
                {
                    "name": "first_token_reserves",
                    "type": "BigUint"
                },
                {
                    "name": "second_token_reserves",
                    "type": "BigUint"
                },
                {
                    "name": "block",
                    "type": "u64"
                },
                {
                    "name": "epoch",
                    "type": "u64"
                },
                {
                    "name": "timestamp",
                    "type": "u64"
                }
            ]
        },
        "EsdtTokenPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "RemoveLiquidityEvent": {
            "type": "struct",
            "fields": [
                {
                    "name": "caller",
                    "type": "Address"
                },
                {
                    "name": "first_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "first_token_amount",
                    "type": "BigUint"
                },
                {
                    "name": "second_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "second_token_amount",
                    "type": "BigUint"
                },
                {
                    "name": "lp_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "lp_token_amount",
                    "type": "BigUint"
                },
                {
                    "name": "lp_supply",
                    "type": "BigUint"
                },
                {
                    "name": "first_token_reserves",
                    "type": "BigUint"
                },
                {
                    "name": "second_token_reserves",
                    "type": "BigUint"
                },
                {
                    "name": "block",
                    "type": "u64"
                },
                {
                    "name": "epoch",
                    "type": "u64"
                },
                {
                    "name": "timestamp",
                    "type": "u64"
                }
            ]
        },
        "State": {
            "type": "enum",
            "variants": [
                {
                    "name": "Inactive",
                    "discriminant": 0
                },
                {
                    "name": "Active",
                    "discriminant": 1
                },
                {
                    "name": "PartialActive",
                    "discriminant": 2
                }
            ]
        },
        "SwapEvent": {
            "type": "struct",
            "fields": [
                {
                    "name": "caller",
                    "type": "Address"
                },
                {
                    "name": "token_id_in",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_amount_in",
                    "type": "BigUint"
                },
                {
                    "name": "token_id_out",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_amount_out",
                    "type": "BigUint"
                },
                {
                    "name": "fee_amount",
                    "type": "BigUint"
                },
                {
                    "name": "token_in_reserve",
                    "type": "BigUint"
                },
                {
                    "name": "token_out_reserve",
                    "type": "BigUint"
                },
                {
                    "name": "block",
                    "type": "u64"
                },
                {
                    "name": "epoch",
                    "type": "u64"
                },
                {
                    "name": "timestamp",
                    "type": "u64"
                }
            ]
        },
        "SwapNoFeeAndForwardEvent": {
            "type": "struct",
            "fields": [
                {
                    "name": "caller",
                    "type": "Address"
                },
                {
                    "name": "token_id_in",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_amount_in",
                    "type": "BigUint"
                },
                {
                    "name": "token_id_out",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_amount_out",
                    "type": "BigUint"
                },
                {
                    "name": "destination",
                    "type": "Address"
                },
                {
                    "name": "block",
                    "type": "u64"
                },
                {
                    "name": "epoch",
                    "type": "u64"
                },
                {
                    "name": "timestamp",
                    "type": "u64"
                }
            ]
        },
        "TokenPair": {
            "type": "struct",
            "fields": [
                {
                    "name": "first_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "second_token",
                    "type": "TokenIdentifier"
                }
            ]
        }
    }
}
